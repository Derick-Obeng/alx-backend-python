pipeline {
    agent {
        docker {
            image 'python:3.11'
            args '-u root'
        }
    }
    
    environment {
        DJANGO_SETTINGS_MODULE = 'messaging_app.test_settings'
    }
    
    stages {
        stage('Checkout') {
            steps {
                checkout([
                    $class: 'GitSCM',
                    branches: [[name: '*/main']],
                    userRemoteConfigs: [[
                        url: 'https://github.com/Derick-Obeng/alx-backend-python.git',
                        credentialsId: 'docker-hub-credentials'
                    ]]
                ])
                echo "Code checked out from git branch: main"
            }
        }
        
        stage('Install Dependencies') {
            steps {
                sh '''
                    pip install -r messaging_app/requirements.txt
                    pip install pytest pytest-django pytest-html pytest-cov
                '''
            }
        }
        
        stage('Lint') {
            steps {
                sh '''
                    cd messaging_app
                    pip install pycodestyle
                    python -m pycodestyle --max-line-length=120 . || true
                '''
            }
        }
        
        stage('Test') {
            steps {
                sh '''
                    cd messaging_app
                    python manage.py migrate --run-syncdb --settings=messaging_app.test_settings
                    python manage.py test --settings=messaging_app.test_settings
                    python -m pytest chats/tests.py -v || true
                '''
            }
        }
    }
    
    post {
        always {
            echo "Pipeline execution completed"
        }
        success {
            echo "Pipeline completed successfully!"
        }
        failure {
            echo "Pipeline failed"
        }
    }
}
